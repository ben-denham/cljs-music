["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$leipzig.melody","~:imports",null,"~:requires",["^ ","~$scale","~$leipzig.scale","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$mapthen",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","~:line",122,"~:column",7,"~:end-line",122,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^G",[["~$f","~$&","~$melodies"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^G",["~$f","^I"]]],"^F",["^G",[["~$f","~$&","^I"]]],"~:arglists-meta",["^G",[null]]]],"^5","~$leipzig.melody/mapthen","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",14,"^J",["^ ","^K",true,"^L",1,"^M",1,"^N",[["^G",["~$f","^I"]]],"^F",["^G",[["~$f","~$&","^I"]]],"^O",["^G",[null]]],"^N",[["^G",["~$f","^I"]]],"~:protocol-impl",null,"^L",1,"^O",["^G",[null]],"^C",1,"^K",true,"~:methods",[["^ ","^L",1,"^K",true,"~:tag",["^4",[null,"~$any"]]]],"^B",122,"~:ret-tag","^T","^D",122,"^M",1,"~:fn-var",true,"^F",["^G",[["~$f","~$&","^I"]]]],"~$tempo",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",137,"^C",7,"^D",137,"^E",12,"^F",["^G",["^H",["^G",[["~$timing","~$notes"]]]]],"~:doc","Transform both :time and :duration according to timing.\n  e.g. (->> notes (tempo (bpm 120)))"],"^5","~$leipzig.melody/tempo","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",12,"^N",["^G",[["^X","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",137,"^U","~$cljs.core/LazySeq","^D",137,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["^X","^Y"]]]]],"^Z","Transform both :time and :duration according to timing.\n  e.g. (->> notes (tempo (bpm 120)))"],"~$bpm",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",4,"^C",7,"^D",4,"^E",10,"^F",["^G",["^H",["^G",[["~$beats"]]]]],"^Z","Returns a function that translates a beat number into seconds.\n  e.g. ((bpm 90) 5)"],"^5","~$leipzig.melody/bpm","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",10,"^N",["^G",[["^12"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",4,"^U","~$function","^D",4,"^M",1,"^V",true,"^F",["^G",["^H",["^G",[["^12"]]]]],"^Z","Returns a function that translates a beat number into seconds.\n  e.g. ((bpm 90) 5)"],"~$but",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",90,"^C",7,"^D",90,"^E",10,"^F",["^G",["^H",["^G",[["~$start","~$end","~$variation","^Y"]]]]],"^Z","Replaces part of a melody with another.\n  e.g. (->> notes (but 2 4 variation))"],"^5","~$leipzig.melody/but","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",10,"^N",["^G",[["^16","^17","^18","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",90,"^U",["^4",[null,"~$clj"]],"^D",90,"^M",4,"^V",true,"^F",["^G",["^H",["^G",[["^16","^17","^18","^Y"]]]]],"^Z","Replaces part of a melody with another.\n  e.g. (->> notes (but 2 4 variation))"],"~$having",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",9,"^C",7,"^D",9,"^E",13,"^F",["^G",["^H",["^G",[["~$k","~$values","^Y"]]]]],"^Z","Zips an arbitrary quality onto a melody.\n  e.g. (->> (rhythm [1 1/2]) (having :drum [:kick :snare]))"],"^5","~$leipzig.melody/having","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",13,"^N",["^G",[["~$k","^1<","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",9,"^U","^10","^D",9,"^M",3,"^V",true,"^F",["^G",["^H",["^G",[["~$k","^1<","^Y"]]]]],"^Z","Zips an arbitrary quality onto a melody.\n  e.g. (->> (rhythm [1 1/2]) (having :drum [:kick :snare]))"],"~$where",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",61,"^C",7,"^D",61,"^E",12,"^F",["^G",["^H",["^G",[["~$k","~$f","^Y"]]]]],"^Z","Applies f to the k key of each note in notes, ignoring missing keys.\n  e.g. (->> notes (where :time (bpm 90)))"],"^5","~$leipzig.melody/where","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",12,"^N",["^G",[["~$k","~$f","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",61,"^U","^10","^D",61,"^M",3,"^V",true,"^F",["^G",["^H",["^G",[["~$k","~$f","^Y"]]]]],"^Z","Applies f to the k key of each note in notes, ignoring missing keys.\n  e.g. (->> notes (where :time (bpm 90)))"],"~$is",["^ ","^5","~$leipzig.melody/is","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",47,"^C",1,"^D",47,"^E",8,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",47,"^C",6,"^D",47,"^E",8],"^Z","Synonym for constantly.\n  e.g. (->> notes (wherever (comp not :part), :part (is :bass)))"],"~$times",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",129,"^C",7,"^D",129,"^E",12,"^F",["^G",["^H",["^G",[["~$n","^Y"]]]]],"^Z","Repeats notes n times.\n  e.g. (->> bassline (times 4))"],"^5","~$leipzig.melody/times","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",12,"^N",["^G",[["~$n","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",129,"^U",["^4",[null,"^T"]],"^D",129,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["~$n","^Y"]]]]],"^Z","Repeats notes n times.\n  e.g. (->> bassline (times 4))"],"~$duration",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",105,"^C",7,"^D",105,"^E",15,"^F",["^G",["^H",["^G",[["^Y"]]]]],"^Z","Returns the total duration of notes.\n  e.g. (->> melody duration)"],"^5","~$leipzig.melody/duration","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",15,"^N",["^G",[["^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",105,"^U",["^4",[null,"^T"]],"^D",105,"^M",1,"^V",true,"^F",["^G",["^H",["^G",[["^Y"]]]]],"^Z","Returns the total duration of notes.\n  e.g. (->> melody duration)"],"~$all",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",67,"^C",7,"^D",67,"^E",10,"^F",["^G",["^H",["^G",[["~$k","~$v","^Y"]]]]],"^Z","Sets a constant value for each note of a melody.\n  e.g. (->> notes (all :part :drum))"],"^5","~$leipzig.melody/all","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",10,"^N",["^G",[["~$k","~$v","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",67,"^U","^10","^D",67,"^M",3,"^V",true,"^F",["^G",["^H",["^G",[["~$k","~$v","^Y"]]]]],"^Z","Sets a constant value for each note of a melody.\n  e.g. (->> notes (all :part :drum))"],"~$utter",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",15,"^C",7,"^D",15,"^E",12,"^F",["^G",["^H",["^G",[["~$object","~$time","^1D","~$velocity"]]]]]],"^5","~$leipzig.melody/utter","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",12,"^N",["^G",[["^1I","^1J","^1D","^1K"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",15,"^U",["^4",["~$cljs.core/IVector","^T","~$clj-nil"]],"^D",15,"^M",4,"^V",true,"^F",["^G",["^H",["^G",[["^1I","^1J","^1D","^1K"]]]]]],"~$before?",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",78,"^C",8,"^D",78,"^E",15,"~:private",true,"^F",["^G",["^H",["^G",[["~$a","~$b"]]]]]],"^1P",true,"^5","~$leipzig.melody/before?","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",15,"^N",["^G",[["~$a","~$b"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",78,"^U","~$boolean","^D",78,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["~$a","~$b"]]]]]],"~$if-applicable",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",52,"^C",8,"^D",52,"^E",21,"^1P",true,"^F",["^G",["^H",["^G",[["~$applies?","~$f"]]]]]],"^1P",true,"^5","~$leipzig.melody/if-applicable","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",21,"^N",["^G",[["^1T","~$f"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",52,"^U","^14","^D",52,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["^1T","~$f"]]]]]],"~$accelerando",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",148,"^C",7,"^D",148,"^E",18,"^F",["^G",["^H",["^G",[["~$from","~$to","~$by"]]]]],"^Z","Linearly interpolated change between from and to.\n  e.g. (->> notes (tempo (accelerando 0 4 3/2))))"],"^5","~$leipzig.melody/accelerando","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",18,"^N",["^G",[["^1W","^1X","^1Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",148,"^U","^14","^D",148,"^M",3,"^V",true,"^F",["^G",["^H",["^G",[["^1W","^1X","^1Y"]]]]],"^Z","Linearly interpolated change between from and to.\n  e.g. (->> notes (tempo (accelerando 0 4 3/2))))"],"~$after",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",73,"^C",7,"^D",73,"^E",12,"^F",["^G",["^H",["^G",[["~$wait","^Y"]]]]],"^Z","Delay notes by wait.\n  e.g. (->> melody (after 3))"],"^5","~$leipzig.melody/after","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",12,"^N",["^G",[["^20","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",73,"^U","^10","^D",73,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["^20","^Y"]]]]],"^Z","Delay notes by wait.\n  e.g. (->> melody (after 3))"],"~$phrase",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",22,"^C",7,"^D",22,"^E",13,"^F",["^G",["^H",["^G",[["~$durations","~$pitches","~$velocities"],["^23","^24"]]]]],"^Z","Translates a sequence of durations and pitches into a melody.\n  nil pitches signify rests, vectors represent clusters, and maps\n  represent chords. Vector durations represent repeated notes.\n  e.g. (phrase [1/2 1/2 3/2 3/2] [0 1 nil 4])\n  (phrase [1 1 2] [4 3 [0 2]])\n  (phrase [1 [1 2]] [4 3])\n  (phrase (repeat 4) (map #(-> triad (root %))) [0 3 4 3])","^J",["^ ","^K",false,"^L",3,"^M",3,"^N",[["^23","^24","^25"],["^23","^24"]],"^F",["^G",[["^23","^24","^25"],["^23","^24"]]],"^O",["^G",[null,null]]]],"^5","~$leipzig.melody/phrase","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",13,"^J",["^ ","^K",false,"^L",3,"^M",3,"^N",[["^23","^24","^25"],["^23","^24"]],"^F",["^G",[["^23","^24","^25"],["^23","^24"]]],"^O",["^G",[null,null]]],"^N",[["^23","^24","^25"],["^23","^24"]],"^Q",null,"^L",3,"^O",["^G",[null,null]],"^C",1,"^K",false,"^R",[["^ ","^L",3,"^K",false,"^S","^T"],["^ ","^L",2,"^K",false,"^S","^10"]],"^B",22,"^D",22,"^M",3,"^V",true,"^F",["^G",[["^23","^24","^25"],["^23","^24"]]],"^Z","Translates a sequence of durations and pitches into a melody.\n  nil pitches signify rests, vectors represent clusters, and maps\n  represent chords. Vector durations represent repeated notes.\n  e.g. (phrase [1/2 1/2 3/2 3/2] [0 1 nil 4])\n  (phrase [1 1 2] [4 3 [0 2]])\n  (phrase [1 [1 2]] [4 3])\n  (phrase (repeat 4) (map #(-> triad (root %))) [0 3 4 3])"],"~$with",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",79,"^C",7,"^D",79,"^E",11,"^F",["^G",["^H",["^G",[[["~$a","~$&","~$other-as","~:as","~$as"],["~$b","~$&","~$other-bs","^29","~$bs"]],["^2:","^2<","~$&","~$others"]]]]],"^Z","Blends melodies.\n  e.g. (->> melody (with bass drums))","^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]]],"^F",["^G",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]],["^2:","^2<","~$&","^2="]]],"^O",["^G",[null,null]]]],"^5","~$leipzig.melody/with","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",11,"^J",["^ ","^K",true,"^L",2,"^M",2,"^N",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]]],"^F",["^G",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]],["^2:","^2<","~$&","^2="]]],"^O",["^G",[null,null]]],"^N",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]]],"^Q",null,"^L",2,"^O",["^G",[null,null]],"^C",1,"^K",true,"^R",[["^ ","^L",2,"^K",false,"^S",["^4",[null,"^1:"]]],["^ ","^L",2,"^K",true,"^S",["^4",[null,"^T"]]]],"^B",79,"^D",79,"^M",2,"^V",true,"^F",["^G",[[["~$a","~$&","^28","^29","^2:"],["~$b","~$&","^2;","^29","^2<"]],["^2:","^2<","~$&","^2="]]],"^Z","Blends melodies.\n  e.g. (->> melody (with bass drums))"],"~$rhythm",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",41,"^C",7,"^D",41,"^E",13,"^F",["^G",["^H",["^G",[["^23"]]]]],"^Z","Translates a sequence of durations into a rhythm.\n  e.g. (rhythm [1 1 2])"],"^5","~$leipzig.melody/rhythm","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",13,"^N",["^G",[["^23"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",41,"^U","^10","^D",41,"^M",1,"^V",true,"^F",["^G",["^H",["^G",[["^23"]]]]],"^Z","Translates a sequence of durations into a rhythm.\n  e.g. (rhythm [1 1 2])"],"~$then",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",114,"^C",7,"^D",114,"^E",11,"^F",["^G",["^H",["^G",[["~$later","~$earlier"]]]]],"^Z","Sequences later after earlier.\n  e.g. (->> call (then response))"],"^5","~$leipzig.melody/then","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",11,"^N",["^G",[["^2B","^2C"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",114,"^U",["^4",[null,"^1:"]],"^D",114,"^M",2,"^V",true,"^F",["^G",["^H",["^G",[["^2B","^2C"]]]]],"^Z","Sequences later after earlier.\n  e.g. (->> call (then response))"],"~$wherever",["^ ","^?",null,"^@",["^ ","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^B",53,"^C",7,"^D",53,"^E",15,"^F",["^G",["^H",["^G",[["^1T","~$k","~$f","^Y"]]]]],"^Z","Applies f to the k key of each note wherever condition? returns true.\n  e.g. (->> notes (wherever (comp not :part), :part (is :piano))"],"^5","~$leipzig.melody/wherever","^A","/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/h2j/-cqfra1/gravity_falls/composition.out/leipzig/melody.cljc","^E",15,"^N",["^G",[["^1T","~$k","~$f","^Y"]]],"^Q",null,"^O",["^G",[null,null]],"^C",1,"^K",false,"^B",53,"^U","^10","^D",53,"^M",4,"^V",true,"^F",["^G",["^H",["^G",[["^1T","~$k","~$f","^Y"]]]]],"^Z","Applies f to the k key of each note wherever condition? returns true.\n  e.g. (->> notes (wherever (comp not :part), :part (is :piano))"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:time","~:pitch","~:duration","~:otherwise","~:velocity"]],"~:order",["^2L","^2K","^2M","^2O","^2N"]],"^Z",null]