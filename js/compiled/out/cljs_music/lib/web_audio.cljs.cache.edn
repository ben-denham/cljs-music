{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs-music.lib.web-audio, :imports nil, :requires {temperament leipzig.temperament, leipzig.temperament leipzig.temperament, melody leipzig.melody, leipzig.melody leipzig.melody, synth cljs-bach.synthesis, cljs-bach.synthesis cljs-bach.synthesis}, :uses nil, :defs {debug {:name cljs-music.lib.web-audio/debug, :file "src/cljs_music/lib/web-audio.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 6, :column 6, :end-line 6, :end-column 11}}, audio-context {:name cljs-music.lib.web-audio/audio-context, :file "src/cljs_music/lib/web-audio.cljs", :line 7, :column 1, :end-line 7, :end-column 23, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 7, :column 10, :end-line 7, :end-column 23}}, default-delay-secs {:name cljs-music.lib.web-audio/default-delay-secs, :file "src/cljs_music/lib/web-audio.cljs", :line 8, :column 1, :end-line 8, :end-column 24, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 8, :column 6, :end-line 8, :end-column 24}}, now {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 10, :column 7, :end-line 10, :end-column 10, :arglists (quote ([]))}, :name cljs-music.lib.web-audio/now, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, play! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([sound-source duration] [sound-source duration at])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sound-source duration] [sound-source duration at]), :arglists ([sound-source duration] [sound-source duration at]), :arglists-meta (nil nil)}}, :name cljs-music.lib.web-audio/play!, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([sound-source duration] [sound-source duration at]), :arglists ([sound-source duration] [sound-source duration at]), :arglists-meta (nil nil)}, :method-params ([sound-source duration] [sound-source duration at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 3, :fn-var true, :arglists ([sound-source duration] [sound-source duration at])}, play-notes! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 20, :column 7, :end-line 20, :end-column 18, :arglists (quote ([notes] [notes at])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([notes] [notes at]), :arglists ([notes] [notes at]), :arglists-meta (nil nil)}}, :name cljs-music.lib.web-audio/play-notes!, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([notes] [notes at]), :arglists ([notes] [notes at]), :arglists-meta (nil nil)}, :method-params ([notes] [notes at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists ([notes] [notes at])}, loop! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 38, :column 7, :end-line 38, :end-column 12, :arglists (quote ([live-fn] [live-fn prev-notes at])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([live-fn] [live-fn prev-notes at]), :arglists ([live-fn] [live-fn prev-notes at]), :arglists-meta (nil nil)}}, :name cljs-music.lib.web-audio/loop!, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([live-fn] [live-fn prev-notes at]), :arglists ([live-fn] [live-fn prev-notes at]), :arglists-meta (nil nil)}, :method-params ([live-fn] [live-fn prev-notes at]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists ([live-fn] [live-fn prev-notes at])}, pause! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 51, :column 7, :end-line 51, :end-column 13, :arglists (quote ([]))}, :name cljs-music.lib.web-audio/pause!, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resume! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/web-audio.cljs", :line 54, :column 7, :end-line 54, :end-column 14, :arglists (quote ([]))}, :name cljs-music.lib.web-audio/resume!, :variadic false, :file "src/cljs_music/lib/web-audio.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:instrument :time :pitch :duration}, :order [:time :duration :instrument :pitch]}, :doc nil}