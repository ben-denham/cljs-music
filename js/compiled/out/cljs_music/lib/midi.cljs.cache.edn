{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs-music.lib.midi, :imports nil, :requires nil, :uses nil, :defs {midi-listener {:name cljs-music.lib.midi/midi-listener, :file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :line 3, :column 1, :end-line 3, :end-column 19, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :line 3, :column 6, :end-line 3, :end-column 19}}, midi-handler {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :line 5, :column 8, :end-line 5, :end-column 20, :private true, :arglists (quote ([type midi-event]))}, :private true, :name cljs-music.lib.midi/midi-handler, :variadic false, :file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :end-column 20, :method-params ([type midi-event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type midi-event]))}, midi-init! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :line 10, :column 8, :end-line 10, :end-column 18, :private true, :arglists (quote ([type]))}, :private true, :name cljs-music.lib.midi/midi-init!, :variadic false, :file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :end-column 18, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, set-midi-listener! {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :line 18, :column 7, :end-line 18, :end-column 25, :arglists (quote ([type listener]))}, :name cljs-music.lib.midi/set-midi-listener!, :variadic false, :file "/home/ben/src/cljs-music/src/cljs_music/lib/midi.cljs", :end-column 25, :method-params ([type listener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type listener]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:keywordize-keys}, :order [:keywordize-keys]}, :doc nil}