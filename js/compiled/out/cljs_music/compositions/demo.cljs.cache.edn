{:rename-macros {}, :renames {}, :use-macros {import-live! cljs-music.live}, :excludes #{}, :name cljs-music.compositions.demo, :imports nil, :requires {cljs-music.live cljs-music.live}, :uses nil, :defs {augment {:name cljs-music.compositions.demo/augment, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, minor {:name cljs-music.compositions.demo/minor, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, jam {:name cljs-music.compositions.demo/jam, :file "src/cljs_music/compositions/demo.cljs", :line 55, :column 1, :end-line 55, :end-column 13, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 55, :column 10, :end-line 55, :end-column 13}}, midi-note-on {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 59, :column 7, :end-line 59, :end-column 19, :arglists (quote ([e]))}, :name cljs-music.compositions.demo/midi-note-on, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, harmony {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 31, :column 7, :end-line 31, :end-column 14, :arglists (quote ([prev]))}, :name cljs-music.compositions.demo/harmony, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 14, :method-params ([prev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prev]))}, melody {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 36, :column 7, :end-line 36, :end-column 13, :arglists (quote ([prev]))}, :name cljs-music.compositions.demo/melody, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 13, :method-params ([prev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prev]))}, live {:name cljs-music.compositions.demo/live, :file "src/cljs_music/compositions/demo.cljs", :line 4, :column 1, :end-line 4, :end-column 14, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 4, :column 10, :end-line 4, :end-column 14}}, white-noise {:name cljs-music.compositions.demo/white-noise, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, audio-context {:name cljs-music.compositions.demo/audio-context, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, tempo {:name cljs-music.compositions.demo/tempo, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-well {:name cljs-music.compositions.demo/temp-well, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, aeolian {:name cljs-music.compositions.demo/aeolian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, add {:name cljs-music.compositions.demo/add, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, bpm {:name cljs-music.compositions.demo/bpm, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, run-with {:name cljs-music.compositions.demo/run-with, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, destination {:name cljs-music.compositions.demo/destination, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-werckmeister-i {:name cljs-music.compositions.demo/temp-werckmeister-i, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, pentatonic {:name cljs-music.compositions.demo/pentatonic, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, resume! {:name cljs-music.compositions.demo/resume!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, adsr {:name cljs-music.compositions.demo/adsr, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, ping {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([note]))}, :name cljs-music.compositions.demo/ping, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 11, :method-params ([note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([note]))}, stereo-panner {:name cljs-music.compositions.demo/stereo-panner, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, enhance {:name cljs-music.compositions.demo/enhance, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, adshr {:name cljs-music.compositions.demo/adshr, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, envelope {:name cljs-music.compositions.demo/envelope, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, locrian {:name cljs-music.compositions.demo/locrian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, connect-> {:name cljs-music.compositions.demo/connect->, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, blues {:name cljs-music.compositions.demo/blues, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, having {:name cljs-music.compositions.demo/having, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, current-time {:name cljs-music.compositions.demo/current-time, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, where {:name cljs-music.compositions.demo/where, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, play-notes! {:name cljs-music.compositions.demo/play-notes!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, now {:name cljs-music.compositions.demo/now, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-equal {:name cljs-music.compositions.demo/temp-equal, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, sawtooth {:name cljs-music.compositions.demo/sawtooth, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, triangle {:name cljs-music.compositions.demo/triangle, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, raise {:name cljs-music.compositions.demo/raise, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, ninth {:name cljs-music.compositions.demo/ninth, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, A {:name cljs-music.compositions.demo/A, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-pythagorean {:name cljs-music.compositions.demo/temp-pythagorean, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, F {:name cljs-music.compositions.demo/F, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, bass {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([prev]))}, :name cljs-music.compositions.demo/bass, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 11, :method-params ([prev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prev]))}, ionian {:name cljs-music.compositions.demo/ionian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-werckmeister-ii {:name cljs-music.compositions.demo/temp-werckmeister-ii, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, inversion {:name cljs-music.compositions.demo/inversion, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, constant {:name cljs-music.compositions.demo/constant, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, reverb {:name cljs-music.compositions.demo/reverb, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, bass-inst {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([note]))}, :name cljs-music.compositions.demo/bass-inst, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 16, :method-params ([note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([note]))}, temp-pythagorean-comma {:name cljs-music.compositions.demo/temp-pythagorean-comma, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, D {:name cljs-music.compositions.demo/D, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, times {:name cljs-music.compositions.demo/times, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, low-pass {:name cljs-music.compositions.demo/low-pass, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, live-fn {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 48, :column 7, :end-line 48, :end-column 14, :arglists (quote ([prev]))}, :name cljs-music.compositions.demo/live-fn, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 14, :method-params ([prev]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([prev]))}, B {:name cljs-music.compositions.demo/B, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, mixolydian {:name cljs-music.compositions.demo/mixolydian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, duration {:name cljs-music.compositions.demo/duration, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, dorian {:name cljs-music.compositions.demo/dorian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, delay-line {:name cljs-music.compositions.demo/delay-line, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, C {:name cljs-music.compositions.demo/C, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, all {:name cljs-music.compositions.demo/all, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, high-pass {:name cljs-music.compositions.demo/high-pass, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-werckmeister-iii {:name cljs-music.compositions.demo/temp-werckmeister-iii, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, play! {:name cljs-music.compositions.demo/play!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-seven-limit-just {:name cljs-music.compositions.demo/temp-seven-limit-just, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-just {:name cljs-music.compositions.demo/temp-just, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, high {:name cljs-music.compositions.demo/high, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, triad {:name cljs-music.compositions.demo/triad, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-five-limit-just {:name cljs-music.compositions.demo/temp-five-limit-just, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, major {:name cljs-music.compositions.demo/major, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, after {:name cljs-music.compositions.demo/after, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, pause! {:name cljs-music.compositions.demo/pause!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, E {:name cljs-music.compositions.demo/E, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, loop! {:name cljs-music.compositions.demo/loop!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, phrase {:name cljs-music.compositions.demo/phrase, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, root {:name cljs-music.compositions.demo/root, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, lydian {:name cljs-music.compositions.demo/lydian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, G {:name cljs-music.compositions.demo/G, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, phrygian {:name cljs-music.compositions.demo/phrygian, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, with {:name cljs-music.compositions.demo/with, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, gain {:name cljs-music.compositions.demo/gain, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, rhythm {:name cljs-music.compositions.demo/rhythm, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, square {:name cljs-music.compositions.demo/square, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, lower {:name cljs-music.compositions.demo/lower, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, then {:name cljs-music.compositions.demo/then, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, sine {:name cljs-music.compositions.demo/sine, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, flat {:name cljs-music.compositions.demo/flat, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, bell {:protocol-inline nil, :meta {:file "/home/ben/src/cljs-music/src/cljs_music/compositions/demo.cljs", :line 15, :column 7, :end-line 15, :end-column 11, :arglists (quote ([note]))}, :name cljs-music.compositions.demo/bell, :variadic false, :file "src/cljs_music/compositions/demo.cljs", :end-column 11, :method-params ([note]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([note]))}, low {:name cljs-music.compositions.demo/low, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, wherever {:name cljs-music.compositions.demo/wherever, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, temp-meantone {:name cljs-music.compositions.demo/temp-meantone, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, set-midi-listener! {:name cljs-music.compositions.demo/set-midi-listener!, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, seventh {:name cljs-music.compositions.demo/seventh, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, sharp {:name cljs-music.compositions.demo/sharp, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}, percussive {:name cljs-music.compositions.demo/percussive, :meta {:file nil}, :file "src/cljs_music/compositions/demo.cljs", :line 5, :column 4}}, :require-macros {cljs-music.live cljs-music.live}, :cljs.analyzer/constants {:seen #{midi-note-on cljs-music.compositions.demo/midi-note-on :instrument :number :ns :name :file :end-column :pitch :column :note live-fn :line e :end-line :arglists :doc cljs-music.compositions.demo prev :test cljs-music.compositions.demo/live-fn}, :order [:pitch :instrument cljs-music.compositions.demo/live-fn :ns :name :file :end-column :column :line :end-line :arglists :doc :test cljs-music.compositions.demo live-fn prev :note :number cljs-music.compositions.demo/midi-note-on midi-note-on e]}, :doc nil}