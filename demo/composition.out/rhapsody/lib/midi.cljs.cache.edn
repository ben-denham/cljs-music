{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rhapsody.lib.midi, :imports nil, :requires {webmidi.webmidi webmidi.webmidi}, :uses nil, :defs {midi-listener {:name rhapsody.lib.midi/midi-listener, :file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :line 4, :column 1, :end-line 4, :end-column 19, :meta {:file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :line 4, :column 6, :end-line 4, :end-column 19}}, midi-handler {:protocol-inline nil, :meta {:file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :line 6, :column 8, :end-line 6, :end-column 20, :private true, :arglists (quote ([type midi-event]))}, :private true, :name rhapsody.lib.midi/midi-handler, :variadic false, :file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :end-column 20, :method-params ([type midi-event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type midi-event]))}, midi-init! {:protocol-inline nil, :meta {:file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :line 11, :column 8, :end-line 11, :end-column 18, :private true, :arglists (quote ([type]))}, :private true, :name rhapsody.lib.midi/midi-init!, :variadic false, :file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :end-column 18, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, set-midi-listener! {:protocol-inline nil, :meta {:file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :line 19, :column 7, :end-line 19, :end-column 25, :arglists (quote ([type listener]))}, :name rhapsody.lib.midi/set-midi-listener!, :variadic false, :file "/home/ben/.boot/cache/tmp/home/ben/src/rhapsody/jzm/w230hx/rhapsody/lib/midi.cljs", :end-column 25, :method-params ([type listener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type listener]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:keywordize-keys}, :order [:keywordize-keys]}, :doc nil}